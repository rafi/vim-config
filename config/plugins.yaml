---
# PLUGINS
# ===
# See lua/plugins/*.lua and config/plugins/*.vim for plugin configuration.
# See config/plugins/all.vim for plugin mappings.

# Startup
# -------
- repo: Shougo/dein.vim
- repo: thinca/vim-localrc
- { repo: rafi/awesome-vim-colorschemes, merged: 0 }
- { repo: folke/lsp-colors.nvim, if: has('nvim-0.5') }
- { repo: nvim-lua/plenary.nvim, if: has('nvim-0.5') }
- { repo: kyazdani42/nvim-web-devicons, if: has('nvim-0.5') }

- repo: christoomey/vim-tmux-navigator
  if: "! (has('win32') || has('win64'))"

- repo: tpope/vim-sleuth
  hook_add: |-
    let g:sleuth_no_filetype_indent_on = 1
    let g:sleuth_gitcommit_heuristics = 0

- repo: sgur/vim-editorconfig
  hook_add: |-
    let g:editorconfig_verbose = 1
    let g:editorconfig_blacklist = {
      \ 'filetype': ['git.*', 'help', 'lsp-.*', 'any-jump', 'gina-.*'],
      \ 'pattern': ['\.un~$']
      \ }

# Lazy Loading
# ==========================================

# ==========================================
# Commands
# --------

- repo: nvim-neo-tree/neo-tree.nvim
  if: has('nvim-0.7')
  on_cmd: Neotree
  hook_post_source: lua require('plugins.neo-tree')

- { repo: MunifTanjim/nui.nvim, on_lua: nui, on_source: neo-tree.nvim }

- { repo: mbbill/undotree, on_cmd: UndotreeToggle }
- { repo: tweekmonster/helpful.vim, on_cmd: HelpfulVersion }
- { repo: lambdalisue/suda.vim, on_event: BufRead }

- repo: b3nj5m1n/kommentary
  if: has('nvim-0.5')
  on_event: FileType
  hook_source: lua require('plugins.kommentary')

- repo: TimUntersberger/neogit
  depends: diffview.nvim
  on_cmd: Neogit
  on_lua: neogit
  hook_source: lua require('plugins.neogit')

- repo: lambdalisue/gina.vim
  on_cmd: Gina
  on_ft: [ gitcommit, gitrebase ]
  hook_source: lua require('plugins.gina')

- repo: folke/zen-mode.nvim
  if: has('nvim-0.5')
  on_cmd: ZenMode
  hook_post_source: lua require('plugins.zen-mode')

- repo: folke/which-key.nvim
  if: has('nvim-0.5')
  on_cmd: WhichKey
  hook_post_source: lua require('plugins.which-key')

- repo: tversteeg/registers.nvim
  if: has('nvim-0.5')
  on_cmd: Registers
  on_map: { i: '<C-r>', nx: '"' }
  hook_source: let g:registers_window_border = 'rounded'

- repo: NTBBloodbath/rest.nvim
  if: has('nvim-0.5')
  on_map: { n: <Plug>RestNvim }
  on_ft: http
  hook_post_source: lua require('rest-nvim').setup{skip_ssl_verification=true}
  hook_add: |
    augroup user_events
      autocmd BufNewFile,BufRead *.http setf http
      autocmd FileType httpResult nnoremap <buffer> q <cmd>quit<CR>
    augroup END

- repo: pechorin/any-jump.vim
  on_cmd: [ AnyJump, AnyJumpVisual ]
  hook_add: |-
    let g:any_jump_disable_default_keybindings = 1
    autocmd user_events FileType any-jump setlocal cursorline

- repo: windwp/nvim-spectre
  if: has('nvim-0.5')
  on_lua: spectre
  hook_post_source: lua require('plugins.spectre')

- repo: kana/vim-niceblock
  on_map: { x: <Plug> }
  hook_add: let g:niceblock_no_default_key_mappings = 0

- repo: t9md/vim-choosewin
  on_map: { n: <Plug> }
  hook_add: |-
    let g:choosewin_label = 'ADFGHJKLUIOPQWERT'
    let g:choosewin_label_padding = 5

- repo: mzlogin/vim-markdown-toc
  on_cmd: [ GenTocGFM, GenTocRedcarpet, GenTocGitLab, UpdateToc ]
  hook_add: let g:vmt_auto_update_on_save = 0

- repo: Ron89/thesaurus_query.vim
  on_cmd:
    - Thesaurus
    - ThesaurusQueryReplaceCurrentWord
    - ThesaurusQueryLookupCurrentWord
  hook_add: |-
    let g:tq_map_keys = 0
    let g:tq_use_vim_autocomplete = 0

# ==========================================
# Interface
# ---------
- { repo: itchyny/vim-gitbranch, on_event: FileType }
- { repo: romainl/vim-cool, on_event: [ CursorMoved, InsertEnter ]}
- { repo: haya14busa/vim-asterisk, on_map: { nv: <Plug> }}
- { repo: rhysd/accelerated-jk, on_map: { n: <Plug> }, if: $SUDO_USER == '' }
- { repo: haya14busa/vim-edgemotion, on_map: { nx: <Plug> }}
- { repo: t9md/vim-quickhl, on_map: { nx: <Plug> }}
- { repo: rafi/vim-sidemenu, on_map: { nx: <Plug> }}

- repo: nvim-lualine/lualine.nvim
  if: has('nvim-0.5')
  on_event: VimEnter
  hook_post_source: lua require('plugins.lualine')

- repo: rcarriga/nvim-notify
  if: has('nvim-0.5')
  on_lua: notify
  hook_post_source: lua require('notify').setup()

- repo: itchyny/vim-cursorword
  on_event: FileType
  hook_add: let g:cursorword = 0
  hook_source: |-
    augroup user_plugin_cursorword
      autocmd!
      autocmd FileType json,yaml,markdown,nginx,dosini,conf,text
        \ let b:cursorword = 1
      autocmd WinEnter * if &diff || &pvw | let b:cursorword = 0 | endif
      autocmd InsertEnter * if get(b:, 'cursorword', 0) == 1
        \| let b:cursorword = 0
        \| endif
      autocmd InsertLeave * if get(b:, 'cursorword', 1) == 0
        \| let b:cursorword = 1
        \| endif
    augroup END

- repo: lewis6991/gitsigns.nvim
  if: has('nvim-0.5')
  on_event: VimEnter
  hook_post_source: lua require('plugins.gitsigns')

- repo: chentoast/marks.nvim
  if: has('nvim-0.5')
  depends: gitsigns.nvim
  on_event: FileType
  hook_post_source: lua require('plugins.marks')

- repo: nathanaelkane/vim-indent-guides
  on_event: FileType
  hook_post_source: IndentGuidesEnable
  hook_source: |-
    let g:indent_guides_enable_on_vim_startup = 0
    let g:indent_guides_default_mapping = 0
    let g:indent_guides_tab_guides = 0
    let g:indent_guides_color_change_percent = 3
    let g:indent_guides_guide_size = 1
    let g:indent_guides_exclude_filetypes = [
      \ 'help', 'man', 'fern', 'defx', 'denite', 'denite-filter', 'startify',
      \ 'vista', 'vista_kind', 'tagbar', 'lsp-hover', 'clap_input', 'fzf',
      \ 'any-jump', 'gina-status', 'gina-commit', 'gina-log', 'minimap',
      \ 'quickpick-filter', 'lsp-quickpick-filter', 'lspinfo'
      \ ]
    augroup user_plugin_indentguides
      autocmd!
      autocmd BufEnter *
        \ if ! empty(&l:filetype) && empty(&buftype) && ! &previewwindow
        \|   if g:indent_guides_autocmds_enabled == 0 && &l:expandtab
        \|     IndentGuidesEnable
        \|   elseif g:indent_guides_autocmds_enabled == 1 && ! &l:expandtab
        \|     IndentGuidesDisable
        \|   endif
        \| elseif g:indent_guides_autocmds_enabled == 1
        \|   IndentGuidesDisable
        \| endif
    augroup END

- repo: kevinhwang91/nvim-bqf
  if: has('nvim-0.5')
  on_ft: qf
  on_cmd: BqfAutoToggle
  on_event: QuickFixCmdPost
  hook_source: lua require('plugins.bqf')

- repo: norcalli/nvim-colorizer.lua
  if: has('nvim-0.4')
  on_event: FileType
  hook_post_source: lua require('plugins.colorizer')

- repo: rmagatti/goto-preview
  if: has('nvim-0.5.1')
  depends: telescope.nvim
  on_event: FileType
  hook_post_source: lua require('plugins.goto-preview')

- repo: rhysd/committia.vim
  on_event: BufReadPost
  depends: nvim-treesitter
  hook_source: |-
    let g:committia_min_window_width = 30
    let g:committia_edit_window_width = 75
    let g:committia#git#status_cmd = '-c color.status=false status -sb'

- repo: itchyny/calendar.vim
  on_cmd: Calendar
  hook_source: |-
    let g:calendar_google_calendar = 1
    let g:calendar_google_task = 1
    let g:calendar_cache_directory = expand('$VIM_DATA_PATH/calendar')

- repo: deris/vim-shot-f
  on_map: { nxo: <Plug> }
  hook_add: let g:shot_f_no_default_key_mappings = 1

- repo: vimwiki/vimwiki
  on_map: { n: <Plug> }
  on_cmd: [ VimwikiIndex, VimwikiUISelect ]
  hook_add: |-
    let g:vimwiki_global_ext = 0
    let g:vimwiki_use_calendar = 1
    let g:vimwiki_hl_headers = 1
    let g:vimwiki_hl_cb_checked = 1
    let g:vimwiki_autowriteall = 0
    let g:vimwiki_listsym_rejected = '✗'
    let g:vimwiki_listsyms = '✗○◐●✓'
  hook_source: |-
    let g:vimwiki_key_mappings =
    \ {
    \   'all_maps': 1,
    \   'global': 1,
    \   'headers': 1,
    \   'text_objs': 1,
    \   'table_format': 1,
    \   'table_mappings': 1,
    \   'lists': 1,
    \   'links': 1,
    \   'html': 1,
    \   'mouse': 0,
    \ }
    let g:vimwiki_list = [
    \   { 'diary_header': 'Diary',
    \     'diary_link_fmt': '%Y-%m/%d',
    \     'auto_toc': 1,
    \     'path': '~/docs/wiki/',
    \     'syntax': 'markdown',
    \     'ext': '.md' },
    \   { 'path': '~/docs/books/',
    \     'syntax': 'markdown',
    \     'ext': '.md' }
    \ ]

# ==========================================
# Completion and code analysis
# ----------

- repo: neovim/nvim-lspconfig
  if: has('nvim-0.7')
  on_event: VimEnter
  hook_post_source: lua require('plugins.lspconfig').setup()

- repo: williamboman/nvim-lsp-installer
  if: has('nvim-0.7')
  on_source: nvim-lspconfig

- { repo: hrsh7th/cmp-nvim-lsp, on_source: nvim-lspconfig }
- { repo: kosayoda/nvim-lightbulb, on_source: nvim-lspconfig }
- { repo: folke/lua-dev.nvim, on_source: nvim-lspconfig }

- repo: ray-x/lsp_signature.nvim
  if: has('nvim-0.6.1')
  on_source: nvim-lspconfig

- repo: jose-elias-alvarez/null-ls.nvim
  if: has('nvim-0.7')
  on_event: VimEnter
  depends: nvim-lspconfig
  hook_post_source: lua require('plugins.null-ls')

- repo: hrsh7th/nvim-cmp
  if: has('nvim-0.5')
  on_event: VimEnter
  depends: [ nvim-autopairs, vim-vsnip ]
  hook_post_source: lua require('plugins.cmp')

- { repo: hrsh7th/cmp-nvim-lua, on_source: nvim-cmp }
- { repo: hrsh7th/cmp-buffer, on_source: nvim-cmp }
- { repo: hrsh7th/cmp-vsnip, on_source: nvim-cmp }
- { repo: hrsh7th/cmp-path, on_source: nvim-cmp }
- { repo: hrsh7th/cmp-emoji, on_source: nvim-cmp }
- { repo: andersevenrud/cmp-tmux, on_source: nvim-cmp }

- repo: hrsh7th/vim-vsnip
  on_event: InsertEnter
  merged: 0
  hook_add: |-
    let g:vsnip_snippet_dir = expand('$VIM_DATA_PATH/vsnip')
    let g:vsnip_snippet_dirs = [ expand('$VIM_PATH/snippets') ]
    let g:vsnip_filetypes = {}
    let g:vsnip_filetypes.javascriptreact = ['javascript']
    let g:vsnip_filetypes.typescriptreact = ['typescript']

- { repo: hrsh7th/vim-vsnip-integ, on_source: vim-vsnip }
- { repo: rafamadriz/friendly-snippets, merged: 0, on_source: vim-vsnip }

- repo: windwp/nvim-autopairs
  if: has('nvim-0.5')
  hook_post_source: lua require('nvim-autopairs').setup()

- repo: folke/todo-comments.nvim
  if: has('nvim-0.5')
  on_source: [ telescope.nvim, neovim/nvim-lspconfig ]
  hook_post_source: lua require('plugins.todo-comments')

- repo: folke/trouble.nvim
  if: has('nvim-0.5')
  on_cmd: [ Trouble, TroubleToggle ]

- repo: sindrets/diffview.nvim
  if: has('nvim-0.5')
  on_cmd: [ DiffviewOpen, DiffviewFileHistory ]
  hook_post_source: lua require('plugins.diffview').setup()

- repo: nvim-telescope/telescope.nvim
  if: has('nvim-0.7')
  depends: [ session-lens ]
  on_cmd: Telescope
  on_lua: telescope
  hook_post_source: lua require('plugins.telescope').setup()

- repo: rmagatti/session-lens
  if: has('nvim-0.5')
  depends: auto-session
  on_source: telescope.nvim
  hook_add: let g:loaded_session_lens = 1
  hook_post_source: lua require('plugins.session-lens')

- repo: nvim-telescope/telescope-ui-select.nvim
  if: has('nvim-0.7')
  on_source: telescope.nvim
  hook_post_source: lua require('telescope').load_extension('ui-select')

- repo: jvgrootveld/telescope-zoxide
  if: has('nvim-0.5')
  on_source: telescope.nvim
  hook_post_source: lua require('plugins.telescope-zoxide')

- repo: simrat39/symbols-outline.nvim
  if: has('nvim-0.5')
  on_cmd: [ SymbolsOutline, SymbolsOutlineOpen ]
  hook_source: lua require('plugins.symbols-outline')

- repo: rmagatti/auto-session
  if: has('nvim-0.5')
  # depends: [ gitsigns.nvim, nvim-lspconfig ]
  on_event: VimEnter
  hook_source: lua require('plugins.auto-session')
  hook_add: |-
    autocmd user_events StdinReadPre * let g:auto_session_enabled = v:false

- { repo: sbdchd/neoformat, on_cmd: Neoformat }

- repo: SmiteshP/nvim-gps
  if: has('nvim-0.5')
  on_event: VimEnter
  depends: nvim-treesitter
  hook_post_source: lua require('nvim-gps').setup()

- repo: mattn/emmet-vim
  on_event: InsertEnter
  on_ft: [ html, css, vue, javascript, javascriptreact, svelte ]
  hook_source: |-
    let g:user_emmet_mode = 'i'
    let g:user_emmet_install_global = 0
    let g:user_emmet_install_command = 0
    let g:user_emmet_complete_tag = 0

# ==========================================
# Syntax
# ---------

- repo: nvim-treesitter/nvim-treesitter
  if: has('nvim-0.5')
  on_event: VimEnter
  on_cmd: [ TSUpdate, TSInstall, TSInstallInfo, TSModuleInfo, TSConfigInfo ]
  hook_post_update: ':TSUpdate'
  hook_source: lua require('plugins.treesitter')

- repo: nvim-treesitter/nvim-treesitter-textobjects
  on_source: nvim-treesitter

- repo: JoosepAlviste/nvim-ts-context-commentstring
  on_source: nvim-treesitter

- repo: windwp/nvim-ts-autotag
  on_source: nvim-treesitter

- repo: monkoose/matchparen.nvim
  if: has('nvim-0.7')
  on_event: FileType
  hook_post_source: lua require('matchparen').setup()

# Vimscript syntax/indent plugins
- { repo: iloginow/vim-stylus, on_ft: stylus }
- { repo: chrisbra/csv.vim, on_ft: csv }
- { repo: tpope/vim-git, on_ft: [ gitcommit, gitrebase, gitconfig ]}
- { repo: dag/vim-fish, on_ft: fish }
- { repo: mustache/vim-mustache-handlebars, on_ft: [html, mustache, handlebars]}
- { repo: digitaltoad/vim-pug, on_ft: [ pug, jade ]}
- { repo: keith/swift.vim, on_ft: swift }
- { repo: lifepillar/pgsql.vim, on_ft: pgsql }
- { repo: vim-jp/syntax-vim-ex, on_ft: vim }
- { repo: MTDL9/vim-log-highlighting, on_ft: log }
- { repo: tmux-plugins/vim-tmux, on_ft: tmux }
- { repo: reasonml-editor/vim-reason-plus, on_ft: [ reason, merlin ] }

- repo: towolf/vim-helm
  on_ft: helm
  hook_add: |-
    autocmd user_events BufRead,BufNewFile */templates/*.{yaml,yml,tpl}
      \ setfiletype helm

- repo: preservim/vim-markdown
  on_ft: markdown
  hook_add: |-
    let g:vim_markdown_frontmatter = 1
    let g:vim_markdown_strikethrough = 1
    let g:vim_markdown_folding_disabled = 1
    let g:vim_markdown_conceal = 1
    let g:vim_markdown_conceal_code_blocks = 1
    let g:vim_markdown_new_list_item_indent = 0
    let g:vim_markdown_toc_autofit = 0
    let g:vim_markdown_follow_anchor = 0
    let g:vim_markdown_no_extensions_in_markdown = 1
    let g:vim_markdown_edit_url_in = 'vsplit'
    let g:vim_markdown_fenced_languages = [
      \ 'c++=cpp',
      \ 'viml=vim',
      \ 'bash=sh',
      \ 'ini=dosini',
      \ 'js=javascript',
      \ 'json=javascript',
      \ 'jsx=javascriptreact',
      \ 'tsx=typescriptreact',
      \ 'docker=Dockerfile',
      \ 'makefile=make',
      \ 'py=python'
      \ ]

- repo: pearofducks/ansible-vim
  on_ft: [ ansible, ansible_hosts, jinja2 ]
  hook_add: |-
    let g:ansible_extra_keywords_highlight = 1
    let g:ansible_template_syntaxes = {
      \   '*.json.j2': 'json',
      \   '*.(ba)?sh.j2': 'sh',
      \   '*.ya?ml.j2': 'yaml',
      \   '*.xml.j2': 'xml',
      \   '*.conf.j2': 'conf',
      \   '*.ini.j2': 'ini'
      \ }
    autocmd user_events BufNewFile,BufRead */playbooks/*.{yml,yaml}
      \ setfiletype yaml.ansible
    autocmd user_events BufNewFile,BufRead */inventory/*.ini
      \ setfiletype ansible_hosts

- repo: hashivim/vim-terraform
  on_ft: terraform
  on_cmd: [ Terraform, TerraformFmt ]
  hook_add: |-
    autocmd user_events BufNewFile,BufRead *.hcl setfiletype hcl
    autocmd user_events BufNewFile,BufRead *.tf,*.tfvars setfiletype terraform

# ==========================================
# Operators and text objects
# ---------
- repo: machakann/vim-sandwich
  on_map:
    nxo: [ <Plug>(operator-sandwich-, <Plug>(textobj-sandwich- ]
  hook_add: let g:sandwich_no_default_key_mappings = 1

- repo: mfussenegger/nvim-ts-hint-textobject
  if: has('nvim-0.5')
  depends: nvim-treesitter
  on_lua: tsht

- repo: AndrewRadev/sideways.vim
  on_cmd: [ SidewaysLeft, SidewaysRight, SidewaysJumpLeft, SidewaysJumpRight ]
  on_map: { xo: <Plug>Sideways }

- { repo: AndrewRadev/linediff.vim, on_cmd: [ Linediff, LinediffAdd ]}

- repo: AndrewRadev/splitjoin.vim
  on_cmd: [ SplitjoinJoin, SplitjoinSplit ]
  hook_add: |-
    let g:splitjoin_join_mapping = ''
    let g:splitjoin_split_mapping = ''
    autocmd user_events FileType go let b:splitjoin_trailing_comma = 1

- repo: AndrewRadev/dsf.vim
  on_map: { n: <Plug>Dsf }
  hook_add: let g:dsf_no_mappings = 1

#  vim: set ts=2 sw=2 tw=80 et :
